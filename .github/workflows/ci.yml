name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        cmake-args:
          - -DCMAKE_BUILD_TYPE=Debug -DSINTER_DEBUG_LOGLEVEL=2 -DSINTER_DEBUG_MEMORY_CHECK=1 -DSINTER_COVERAGE=1
          - -DCMAKE_BUILD_TYPE=Debug -DSINTER_DEBUG_LOGLEVEL=2 -DSINTER_DEBUG_MEMORY_CHECK=1
          - -DCMAKE_BUILD_TYPE=Release
    steps:
    - uses: actions/checkout@v2
    - name: install cpp-coveralls
      run: pip install --user cpp-coveralls
      if: contains(matrix.cmake-args, 'coverage')
    - name: mkdir
      run: mkdir build
    - name: cmake
      working-directory: build
      run: cmake .. ${{ matrix.cmake-args }}
    - name: make
      working-directory: build
      run: make -j4
    - name: test
      working-directory: build
      run: make CTEST_OUTPUT_ON_FAILURE=1 test
    - name: coverage
      working-directory: build
      env:
        COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_TOKEN }}
      run: ~/.local/bin/cpp-coveralls
      if: contains(matrix.cmake-args, 'coverage')
  check-headers:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: check if headers work in C++
      working-directory: vm/include
      run: g++ -std=c++11 -fsyntax-only sinter/*.h sinter.h -I. -Wall -Wextra -pedantic
